---
import { ViewTransitions } from 'astro:transitions'
import { css } from '@/styled-system/css'
import { flex } from '@/styled-system/patterns'
import '@/styles/global.css'
import '@/styles/panda.css'
import SearchComponent from '@/components/react/SearchComponent'

interface Props {
	title: string
	description?: string
}

const today = new Date()

const { title, description } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{title} | Today I Learned</title>
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="keywords"
      content="Panda,Tailwind,CSS,Components,Library,React,Solid,Vue"
    />
    <link rel="manifest" href="/manifest.webmanifest" />
    <link rel="sitemap" href="/sitemap.xml" />
    <link rel="icon" href="/icon.svg" type="image/svg+xml" sizes="any" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" sizes="32x32" />
    <link
      rel="apple-touch-icon"
      href="/apple-icon.png"
      type="image/png"
      sizes="180x180"
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:image"
      content="https://til.vercel.com/opengraph-image.png"
    />
    <meta property="og:url" content="https://til.vercel.com" />
    <meta property="og:title" content="Today I Learned" />
    <meta property="og:description" content="Today I Learned" />
    <meta property="og:locale" content="en_US" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content="@grizzly_codes" />
    <meta property="twitter:title" content="Today I Learned" />
    <meta name="twitter:description" content="Today I Learned" />
    <meta
      name="twitter:image"
      content="https://til.vercel.com/twitter-image.png"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap"
      rel="stylesheet"
    />
    <ViewTransitions />
  </head>
  <body class={css({ bg: 'gray.100' })}>    
    <div class={flex({ direction: 'column', minH: '100vh' })}>
      <header role="banner" class={css({ py: 6 })}>
        <div
          class={css({
            w: 'full',
            maxW: '5xl',
            mx: 'auto',
            textAlign: 'center'
          })}
        >
          <a
            href="/"
            class={css({
              fontSize: '5xl',
              fontWeight: 700,
            })}
          >
            <span class={css({fontSize: '7xl'})}>Today</span> I Learned
          </a>
          <button onclick="window.algolia.showModal()" class={css({ bg: 'stone.200', p: 2, rounded: 'full', cursor: 'pointer', display: 'inline-flex', alignItems: 'center' })}>
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class={css({w:4,h:4, color: 'stone.500'})}><circle cx="11" cy="11" r="8"/><path d="m21 21-4.3-4.3"/></svg>
          </button>
        </div>
      </header>
      <main role="main">
        <slot />
      </main>
      <footer
        role="contentinfo"
        class={css({ py: 6, borderTopWidth: '1px', borderColor: 'gray.300' })}
      >
        <div
          class={css({
            w: 'full',
            maxW: '5xl',
            mx: 'auto',
            textAlign: 'center',
          })}
        >
          &copy; {today.getFullYear()}. Made with <span>‚ù§</span>&nbsp;
          <a
            href="https://astro.build/"
            target="_blank"
            rel="noopener noreferrer">Astro</a
          >
        </div>
      </footer>
    </div>
    <dialog id="algolia">
      <SearchComponent client:load/>
    </dialog>
  </body>
</html>

<style is:global>
dialog {
  position: fixed;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  min-width: 40rem;
}

dialog::backdrop {
  position: fixed;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  background: rgba(0, 0, 0, 0.7);
}
</style>